// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  USER
}

enum STATUS {
  PAID
  UNPAID
  CANCELED
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password       String   @unique
  role           ROLE     @default(USER)
  emailConfirmed Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Order {
  id          Int      @id @default(autoincrement())
  consummerId Int
  cartId      Int
  price       Int
  status      STATUS   @default(UNPAID)
  productIds  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("orders")
}

model OrderStatus {
  id        Int      @id @default(autoincrement())
  orderId   Int
  status    STATUS
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ordersStatus")
}

model Cart {
  id          Int           @id @default(autoincrement())
  consummerId Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  products    CartProduct[]

  @@map("Carts")
}

model CartProduct {
  id        Int @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int @default(1) // Ajout de la colonne quantit√©

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  authorId    Int
  price       Float
  imageUrl    String?       // Nouveau champ pour l'URL de l'image
  carts       CartProduct[]

  @@map("products")
}

model Blacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

