openapi: 3.0.0
info:
  title: Marketplace API
  description: Documentation de l'API Marketplace
  version: 1.0.0

servers:
  - url: http://localhost:3000/market_place/v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Routes pour l'authentification des utilisateurs
  - name: Admin
    description: Routes pour l'administration des utilisateurs, produits et commandes
  - name: User
    description: Routes pour la gestion des comptes utilisateurs, commandes et paniers
  - name: Shop
    description: Routes pour la gestion des produits
  - name: Payment
    description: Routes pour la gestion des paiements

paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Inscription d'un utilisateur
      description: Permet à un utilisateur de s'inscrire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Utilisateur créé avec succès
        '400':
          description: Erreur dans les données envoyées

  /auth/login:
    post:
      tags:
        - Auth
      summary: Connexion d'un utilisateur
      description: Authentifie un utilisateur et renvoie un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connexion réussie
        '401':
          description: Identifiants incorrects

  /auth/logout:
    post:
      tags:
        - Auth
      summary: Déconnexion d'un utilisateur
      description: Invalide le token JWT de l'utilisateur
      responses:
        '200':
          description: Déconnexion réussie
        '401':
          description: Utilisateur non authentifié
      security:
        - bearerAuth: []

  /auth/confirm-email:
    get:
      tags:
        - Auth
      summary: Confirmer l'email de l'utilisateur
      description: Vérifie et confirme l'email d'un utilisateur
      responses:
        '200':
          description: Email confirmé avec succès

  /auth/confirm-email-link:
    post:
      tags:
        - Auth
      summary: Demander un nouveau lien de confirmation
      description: Envoie un nouveau lien de confirmation d'email à l'utilisateur
      responses:
        '201':
          description: Lien de confirmation envoyé
      security:
        - bearerAuth: []

  /shop/admin/user/{id}:
    delete:
      tags:
        - Admin
      summary: Supprimer un utilisateur (admin)
      description: Supprime un utilisateur spécifique en tant qu'admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Utilisateur supprimé
        '403':
          description: Accès refusé
      security:
        - bearerAuth: []

    get:
      tags:
        - Admin
      summary: Obtenir un utilisateur par admin
      description: Permet à un admin de récupérer les informations d'un utilisateur spécifique
      responses:
        '200':
          description: Utilisateur récupéré
        '403':
          description: Accès refusé
      security:
        - bearerAuth: []

  /shop/admin/users:
    get:
      tags:
        - Admin
      summary: Liste des utilisateurs (admin)
      description: Obtenir la liste de tous les utilisateurs (admin)
      responses:
        '200':
          description: Liste des utilisateurs
        '403':
          description: Accès refusé
      security:
        - bearerAuth: []

  /shop/admin/product:
    post:
      tags:
        - Admin
      summary: Créer un produit
      description: Permet à un admin de créer un produit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
      responses:
        '201':
          description: Produit créé avec succès
        '403':
          description: Accès refusé
      security:
        - bearerAuth: []

  /shop/admin/product/{id}:
    put:
      tags:
        - Admin
      summary: Mettre à jour un produit
      description: Permet à un admin de mettre à jour un produit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
      responses:
        '200':
          description: Produit mis à jour
        '403':
          description: Accès refusé
      security:
        - bearerAuth: []

    delete:
      tags:
        - Admin
      summary: Supprimer un produit
      description: Permet à un admin de supprimer un produit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produit supprimé
        '403':
          description: Accès refusé
      security:
        - bearerAuth: []

  /shop/admin/orders:
    get:
      tags:
        - Admin
      summary: Obtenir toutes les commandes (admin)
      description: Permet à un admin d'obtenir la liste de toutes les commandes
      responses:
        '200':
          description: Liste des commandes
      security:
        - bearerAuth: []

  /shop/admin/order/{id}:
    get:
      tags:
        - Admin
      summary: Obtenir les détails d'une commande (admin)
      description: Permet à un admin d'obtenir les détails d'une commande spécifique
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Détails de la commande récupérés
      security:
        - bearerAuth: []

    delete:
      tags:
        - Admin
      summary: Supprimer une commande (admin)
      description: Permet à un admin de supprimer une commande spécifique
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Commande supprimée
      security:
        - bearerAuth: []

  /shop/products:
    get:
      tags:
        - Shop
      summary: Obtenir tous les produits
      description: Récupère la liste de tous les produits disponibles
      responses:
        '200':
          description: Liste de produits récupérée

  /shop/products/{id}:
    get:
      tags:
        - Shop
      summary: Obtenir un produit spécifique
      description: Récupère les détails d'un produit via son identifiant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Détails du produit récupérés
        '404':
          description: Produit non trouvé

  /shop/user/order:
    post:
      tags:
        - User
      summary: Créer une commande
      description: Permet à un utilisateur de créer une commande
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Commande créée avec succès
      security:
        - bearerAuth: []

  /shop/user/orders:
    get:
      tags:
        - User
      summary: Obtenir les commandes de l'utilisateur
      description: Récupère la liste des commandes d'un utilisateur
      responses:
        '200':
          description: Liste des commandes récupérée
      security:
        - bearerAuth: []

  /create-payment-session:
    post:
      tags:
        - Payment
      summary: Créer une session de paiement
      description: Crée une session de paiement pour l'utilisateur
      responses:
        '200':
          description: Session de paiement créée
      security:
        - bearerAuth: []
